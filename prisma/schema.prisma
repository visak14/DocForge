// Updated schema.prisma - Add this Notification model
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Visibility {
  PRIVATE
  PUBLIC
  SHARED
}

enum NotificationType {
  MENTION
  DOCUMENT_SHARED
  COMMENT
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  documents       Document[] @relation("AuthorDocs")
  mentions        Mention[]
  sharedDocuments SharedAccess[]
  notifications   Notification[]
}

model Document {
  id         String     @id @default(cuid())
  title      String
  content    String     // rich text/html string
  visibility Visibility @default(PRIVATE)
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())

  author     User       @relation("AuthorDocs", fields: [authorId], references: [id])
  authorId   String

  mentions      Mention[]
  sharedWith    SharedAccess[]
  notifications Notification[]
}

model Mention {
  id           String   @id @default(cuid())
  document     Document @relation(fields: [documentId], references: [id])
  documentId   String
  mentioned    User     @relation(fields: [mentionedId], references: [id])
  mentionedId  String
  createdAt    DateTime @default(now())
}

model SharedAccess {
  id         String   @id @default(cuid())
  document   Document @relation(fields: [documentId], references: [id])
  documentId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  canEdit    Boolean  @default(false)
  createdAt  DateTime @default(now())

  @@unique([documentId, userId])
}

model Notification {
  id           String           @id @default(cuid())
  user         User             @relation(fields: [userId], references: [id])
  userId       String
  type         NotificationType
  title        String
  message      String
  document     Document?        @relation(fields: [documentId], references: [id])
  documentId   String?
  isRead       Boolean          @default(false)
  createdAt    DateTime         @default(now())
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}